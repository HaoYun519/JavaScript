<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<title>建立使用者操作介面</title>
<script>
var svg;
window.onload=function(){
    svg=document.getElementById("svg");
    svg.addEventListener("mousedown", mousedownSvg);
};
function mousedownSvg(e){  // 找出滑鼠的(x,y)座標
    var x=e.clientX;
    var y=e.clientY;
    var bounding=this.getBoundingClientRect();
    x=x-bounding.left;
    y=y-bounding.top;
    var line=createSvgElement("line", { // 產生一個線段
        "x1":x, "y1":y, "x2":x, "y2":y, "stroke":"red", "stroke-width":2
    });
    this.appendChild(line);
    // 滑鼠移動的時候要做的事情
    var drag=function(e){
        line.setAttribute("x2", e.clientX-bounding.left);
        line.setAttribute("y2", e.clientY-bounding.top);
    };
    // 滑鼠放開的時候要做的事情
    var drop=function(e){
        document.removeEventListener("mousemove", drag);
        document.removeEventListener("mouseup", drop);
        
    };
    document.addEventListener("mousemove", drag);
    document.addEventListener("mouseup", drop);
};


// function mousedownSvg(e){ // 取得使用者點擊的座標位置(x,y) 並產生一個方形
//     var x=e.clientX;
//     var y=e.clientY;
//     var bounding=this.getBoundingClientRect();
//     x=x-bounding.left;
//     y=y-bounding.top;
//     // 加入一個方形
//     var rect=createSvgElement("rect",{
//         "x":x, "y":y, "width":100, "height":100, "fill":"black"
//     });
//     this.appendChild(rect);
// }
// 以下函式用來快速建立 Svg 元件

function createSvgElement(tagName, attrs){
    var element=document.createElementNS("http://www.w3.org/2000/svg", tagName);
    for(var name in attrs){
        element.setAttribute(name, attrs[name]);
    }
    return element;
}

</script>
</head>
<body>
<svg id="svg" width="640" height="480" style="border: 1px solid #000000;">


</svg>
</body>
</html>